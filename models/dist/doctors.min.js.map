{"version":3,"sources":["doctors.js"],"names":["mongoose","require","Schema","DocSchema","type","String","required","phone","email","insuarancecover","location","methods","password","this","Doc","model","module","exports"],"mappings":"aAAA,IAAMA,SAAWC,QAAQ,YAAnBD,OAAWC,SAAQC,OAGnBC,UAAY,IAAID,OAAO,CAAvBC,KAAAA,CAEGC,KAAAC,OACGC,UADH,GAFoBC,MAAA,CAMpBH,KAAEC,OACCC,UADD,GANkBE,MAAA,CAUpBJ,KAAEC,OACCC,UADD,EAEHA,QAAU,GAZWG,gBAAA,CAezBA,KAAAA,OACQH,UADS,GAfQI,SAAA,CAqBbL,KAAAA,QAIRD,SAAMC,CACNC,KAAUD,OAFJC,UAAA,KASVH,UAAOQ,QAAKC,gBAAZ,SAAAA,GAAA,OAAOC,KAAKD,WAAaA,GAG7B,IAAME,IAAMd,SAASe,MAAM,MAAOZ,WAElCa,OAAOC,QAAQH","file":"doctors.min.js","sourcesContent":["const mongoose = require('mongoose');\r\n\r\nconst Schema = mongoose.Schema;\r\nconst DocSchema = new Schema({\r\n    \r\n    name:{\r\n        type: String,\r\n        required: true\r\n    },\r\n    phone: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    email: {\r\n        type: String,\r\n        required: true,\r\n        unique: true\r\n    },\r\n    insuarancecover: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    location: {\r\n        \r\n          type: String,\r\n          \r\n      },\r\n    password: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    \r\n   \r\n})\r\nDocSchema.methods.isValidPassword = function (password) {\r\n    // Simple password validation, you can replace it with your own logic\r\n    return this.password === password;\r\n};\r\n\r\nconst Doc = mongoose.model('Doc', DocSchema);\r\n\r\nmodule.exports=Doc"]}