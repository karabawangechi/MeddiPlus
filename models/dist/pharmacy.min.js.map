{"version":3,"sources":["pharmacy.js"],"names":["mongoose","require","Schema","PharmSchema","type","String","required","Med","insuarancecover","location","enum","coordinates","Number","default","methods","isValidPassword","password","this","module","Pharm","model","exports"],"mappings":"aAAA,IAAMA,SAAWC,QAAQ,YAAnBD,OAAWC,SAAQC,OAGnBC,YAAc,IAAID,OAAO,CAAzBC,KAAAA,CAEGC,KAAAC,OACGC,UADH,GAFsBC,IAAA,CAMtBH,KAAAC,OACGC,UADH,GAKLE,gBAAiB,CACTJ,KAAEC,OACNC,UAAU,GAEdG,SAAU,CACFL,KAAE,CACAA,KAAEC,OACNK,KAAO,CAAA,SACPJ,UAAU,GAEZK,YAAa,CACPP,KAAGQ,CAAAA,QACPC,QAAS,CAAA,EAAA,OAOfV,YAAAW,QAAAC,gBAAA,SAAAC,GADJ,OAAAC,KAAAD,WAAAA,GAOAE,IAAMC,MAANnB,SAAAoB,MAAA,QAAAjB,aAAAe,OAAOG,QAAQF","file":"pharmacy.min.js","sourcesContent":["const mongoose = require('mongoose');\r\n\r\nconst Schema = mongoose.Schema;\r\nconst PharmSchema = new Schema({\r\n    \r\n    name:{\r\n        type: String,\r\n        required: true\r\n    },\r\n    Med: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    \r\n    insuarancecover: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    location: {\r\n        type: {\r\n          type: String,\r\n          enum: ['Point'],\r\n          required: true\r\n        },\r\n        coordinates: {\r\n          type: [Number],\r\n          default: [0, 0]\r\n        }\r\n      }, \r\n    \r\n   \r\n})\r\nPharmSchema.methods.isValidPassword = function (password) {\r\n    // Simple password validation, you can replace it with your own logic\r\n    return this.password === password;\r\n};\r\n\r\nconst Pharm = mongoose.model('Pharm', PharmSchema);\r\n\r\nmodule.exports=Pharm"]}