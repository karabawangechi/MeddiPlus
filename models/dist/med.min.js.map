{"version":3,"sources":["med.js"],"names":["required","require","Schema","mongoose","type","String","Medprice","Medbrand","unique","enum","loction","Number","MedSchema","methods","isValidPassword","password","this","Med","model","module","exports"],"mappings":"aA+C2BA,IAAAA,SAAUC,QAAA,YADRC,OAAAC,SAAAD,OAEfE,UAAF,IAAAF,OAAA,CAAgBF,QAAAA,CAAQI,KAAEC,OAAAL,UAAA,GAA1BM,SAFiB,CAAAF,KAAAC,OAAAL,UAAA,GAG3BO,SAAU,CAAAH,KAAAC,OAAAL,UAAA,EAAAQ,QAAA,GAAEJ,QAAMC,CAAQL,KAAAA,CAAgBQ,KAAQH,OAHvBI,KAAA,CAAA,SAI3BC,UAAS,GAELN,YAAMC,CACND,KAAA,CAAAO,QACAX,QAAQ,CAAE,EAAA,KAGVI,aAAOO,CAAAA,KADIN,OAAAL,UAAA,KANNY,UAJkBC,QAAAC,gBAAA,SAAAC,GAeXX,OAAIY,KAAEX,WAARU,GAfa,IAA7BE,IAAAd,SAAAe,MAAA,MAAAN,WAwBAO,OAAOC,QAAUH","file":"med.min.js","sourcesContent":["// const mongoose = require('mongoose');\r\n\r\n// const Schema = mongoose.Schema;\r\n// const MedSchema = new Schema({\r\n    \r\n//     Medname:{\r\n//         type: String,\r\n//         required: true\r\n//     },\r\n//     Medprice: {\r\n//         type: String,\r\n//         required: true\r\n//     },\r\n//     Medbrand: {\r\n//         type: String,\r\n//         required: true,\r\n//         unique: true\r\n//     },\r\n    \r\n//     loction: { \r\n//         type: {String, \r\n//     enum:['Point'],\r\n\r\n        \r\n//         coordinates:{\r\n//             type:[Number],\r\n//             default:[0,0]\r\n//         }},\r\n//      // Add this line for the new field\r\n//     pharmacyname: {\r\n//         type: String,\r\n//         required: true\r\n//     },\r\n    \r\n// })\r\n// MedSchema.methods.isValidPassword = function (password) {\r\n//     // Simple password validation, you can replace it with your own logic\r\n//     return this.password === password;\r\n// };\r\n\r\n// const Med = mongoose.model('Med', MedSchema);\r\n\r\n// module.exports=Med\r\nconst mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst MedSchema = new Schema({\r\n  Medname: { type: String, required: true },\r\n  Medprice: { type: String, required: true },\r\n  Medbrand: { type: String, required: true, unique: true },\r\n  loction: {\r\n    type: {\r\n      type: String,\r\n      enum: ['Point'],\r\n      required: true\r\n    },\r\n    coordinates: {\r\n      type: [Number],\r\n      default: [0, 0]\r\n    }\r\n  },\r\n  pharmacyname: { type: String, required: true },\r\n});\r\n\r\nMedSchema.methods.isValidPassword = function (password) {\r\n  // Simple password validation, you can replace it with your own logic\r\n  return this.password === password;\r\n};\r\n\r\nconst Med = mongoose.model('Med', MedSchema);\r\nmodule.exports = Med;"]}