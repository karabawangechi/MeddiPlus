{"version":3,"sources":["hospital.js"],"names":["mongoose","require","Schema","HospitalSchema","type","String","required","Med","equipment","location","default","coordinates","Number","methods","isValidPassword","password","this","Hospital","model","module","exports"],"mappings":"aAAA,IAAMA,SAAWC,QAAQ,YAAnBD,OAAWC,SAAQC,OAGnBC,eAAiB,IAAID,OAAO,CAA5BC,KAAAA,CAEGC,KAAAC,OACGC,UADH,GAFyBC,IAAA,CAMzBH,KAAAC,OACGC,UADH,GAKLE,UAAW,CACHJ,KAAEC,OACNC,UAAU,GAEdG,SAAU,CACFL,KAAE,CAAAC,OAAAA,OAACA,KAAM,CAANA,SAGPK,QAAS,SAJHC,YAAA,CAKNA,KAAY,CAAAC,QACHF,QADG,CAAA,EAAA,OAQpBP,eAAeU,QAAQC,gBAAkB,SAAUC,GAC/C,OAAAC,KAAAD,WAAAA,GAIJ,IAAME,SAAWjB,SAASkB,MAAM,WAAYf,gBAE5CgB,OAAOC,QAAPH","file":"hospital.min.js","sourcesContent":["const mongoose = require('mongoose');\r\n\r\nconst Schema = mongoose.Schema;\r\nconst HospitalSchema = new Schema({\r\n    \r\n    name:{\r\n        type: String,\r\n        required: true\r\n    },\r\n    Med: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    \r\n    equipment: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    location: { \r\n        type: {String, \r\n        enum:['Point'],\r\n\r\n        default: 'point' },\r\n        coordinates:{\r\n            type:[Number],\r\n            default:[0,0]\r\n        }},\r\n     // Add this line for the new field\r\n    \r\n   \r\n})\r\nHospitalSchema.methods.isValidPassword = function (password) {\r\n    // Simple password validation, you can replace it with your own logic\r\n    return this.password === password;\r\n};\r\n\r\nconst Hospital = mongoose.model('Hospital', HospitalSchema);\r\n\r\nmodule.exports=Hospital"]}