{"version":3,"sources":["docController.js"],"names":["Doc","require","exports","getAllDoc","req","res","User","find","users","json","console","error","status","message","getDocById","findById","params","id","user"],"mappings":";;AAAA,IAAMA,GAAG,GAAGC,OAAO,CAAC,sBAAD,CAAnB,C,CAEA;;;AACAC,OAAO,CAACC,SAAR,GAAoB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEIC,IAAI,CAACC,IAAL,EAFJ;;AAAA;AAEVC,UAAAA,KAFU;AAGhBH,UAAAA,GAAG,CAACI,IAAJ,CAASD,KAAT;AAHgB;AAAA;;AAAA;AAAA;AAAA;AAKhBE,UAAAA,OAAO,CAACC,KAAR;AACAN,UAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,YAAAA,OAAO,EAAE;AAAX,WAArB;;AANgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB,C,CAUA;;;AACAX,OAAO,CAACY,UAAR,GAAqB,kBAAOV,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEEC,IAAI,CAACS,QAAL,CAAcX,GAAG,CAACY,MAAJ,CAAWC,EAAzB,CAFF;;AAAA;AAEXC,UAAAA,IAFW;;AAAA,cAGZA,IAHY;AAAA;AAAA;AAAA;;AAAA,4CAIRb,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,YAAAA,OAAO,EAAE;AAAX,WAArB,CAJQ;;AAAA;AAMjBR,UAAAA,GAAG,CAACI,IAAJ,CAASS,IAAT;AANiB;AAAA;;AAAA;AAAA;AAAA;AAQjBR,UAAAA,OAAO,CAACC,KAAR;AACAN,UAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,YAAAA,OAAO,EAAE;AAAX,WAArB;;AATiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB","sourcesContent":["const Doc = require('../models/doctors.js');\r\n\r\n// Get all users\r\nexports.getAllDoc = async (req, res) => {\r\n  try {\r\n    const users = await User.find();\r\n    res.json(users);\r\n  } catch (err) {\r\n    console.error(err);\r\n    res.status(500).json({ message: 'Server Error' });\r\n  }\r\n};\r\n\r\n// Get a single user\r\nexports.getDocById = async (req, res) => {\r\n  try {\r\n    const user = await User.findById(req.params.id);\r\n    if (!user) {\r\n      return res.status(404).json({ message: 'Doc not found' });\r\n    }\r\n    res.json(user);\r\n  } catch (err) {\r\n    console.error(err);\r\n    res.status(500).json({ message: 'Server Error' });\r\n  }\r\n};"],"file":"docController.dev.js"}